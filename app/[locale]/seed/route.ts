import {drizzle, NodePgQueryResultHKT} from "drizzle-orm/node-postgres";
import {count, ExtractTablesWithRelations} from "drizzle-orm";
import {artistTable, concertsTable, recordsTable, recordTypesTable, socialTable} from "@/app/db/schema";
import {PgTransaction} from "drizzle-orm/pg-core";

const db = drizzle({
    connection: {
        connectionString: process.env.POSTGRES_URL,
    },
});

async function seedSocial(tx: PgTransaction<NodePgQueryResultHKT, Record<string, never>, ExtractTablesWithRelations<Record<string, never>>>) {
    const socialTableRowNum = await tx.select({count: count()}).from(socialTable);

    if (socialTableRowNum[0].count !== 5) {
        const social: typeof socialTable.$inferInsert[] = [
            {service: 'mail'},
            {service: 'phone'},
            {service: 'facebook'},
            {service: 'youtube'},
            {service: 'instagram'},
        ];

        await tx.insert(socialTable).values(social);
        console.log('Social types created!');
    } else {
        console.log('Social types already exists!');
    }
}

async function seedRecordTypes(tx: PgTransaction<NodePgQueryResultHKT, Record<string, never>, ExtractTablesWithRelations<Record<string, never>>>) {
    const recordTypesRowNum = await tx.select({count: count()}).from(recordTypesTable);

    if (recordTypesRowNum[0].count !== 3) {
        const recordTypes: typeof recordTypesTable.$inferInsert[] = [
            {record_type: 'live'},
            {record_type: 'cd'},
            {record_type: 'self_made'},
        ];

        await tx.insert(recordTypesTable).values(recordTypes);
        console.log('Record types created!');
    } else {
        console.log('Record types already exists!');
    }
}

async function seedConcerts(tx: PgTransaction<NodePgQueryResultHKT, Record<string, never>, ExtractTablesWithRelations<Record<string, never>>>) {
    const concerts: typeof concertsTable.$inferInsert[] = [
        {
            place: "Roerich museum",
            address: 'Bishkek, Junusalieva 123',
            short_description: 'Chopin evening',
            description: 'Ballades and fantasias',
            place_ru: null,
            address_ru: null,
            short_description_ru: null,
            description_ru: null,
            poster: null,
            link: null,
            record_id: null,
            date: new Date('2025-02-01 19:00'),
        },
    ];

    await tx.insert(concertsTable).values(concerts);

    console.log('New concerts created!');
}

async function seedRecords(tx: PgTransaction<NodePgQueryResultHKT, Record<string, never>, ExtractTablesWithRelations<Record<string, never>>>) {
    const records: typeof recordsTable.$inferInsert[] = [
        {
            link: "https://www.youtube.com/embed/tIADv9ff2Qs?si=K7rwIDL2zPzhmslC",
            date: [new Date('2024-05-30 18:30')],
            title: "Alexander's Final Performance of the Academic Year",
            short_description: "Bach, Mozart, Beethoven, Chopin, Scriabin, R. Wagner ‚Äì F. Liszt, P. Tchaikovsky ‚Äì S. Rachmaninov",
            description: "*Part I*\n" +
                "J.S. Bach‚Äî Italian Concerto BWV 971, F Major\n" +
                "01:12  1. Allegro\n" +
                "05:34  2. Andante\n" +
                "11:28  3. Presto\n" +
                "\n" +
                "Mozart ‚Äî Sonata No. 11 K. 331, A Major\n" +
                "16:22  1. Andante grazioso\n" +
                "23:33  2. Menuetto\n" +
                "28:38  3. Rondo alla turca\n" +
                "\n" +
                "L. van Beethoven ‚Äî Sonata No. 12 Op. 26, A-flat Major\n" +
                "32:52  1. Andante con variazioni\n" +
                "41:55  2. Scherzo: Allegro molto\n" +
                "44:30  3. Marcia funebre sulla morte d'un eroe: Maestoso andante\n" +
                "50:47  4. Rondo: Allegro\n" +
                "\n" +
                "*Part II*\n" +
                "F. Chopin ‚Äî Sonata No. 2 Op. 35, B-flat Minor\n" +
                "54:36     1. Grave ‚Äì Doppio movimento\n" +
                "1:02:00  2. Scherzo\n" +
                "1:09:25  3. Marche fun√®bre: Lento\n" +
                "1:17:32  4. Finale: Presto\n" +
                "\n" +
                "A. Scriabin ‚Äî Sonata No. 1 Op. 6, F-sharp Minor\n" +
                "1:20:06  1. Allegro con fuoco\n" +
                "1:27:52  2. Adagio\n" +
                "1:32:31  3. Presto\n" +
                "1:36:00  4. Fun√®bre\n" +
                "\n" +
                "1:41:47 - R. Wagner ‚Äì F. Liszt ‚Äî Overture to the opera \"Tannh√§user,\" S. 442\n" +
                "\n" +
                "*Extra*\n" +
                "1:57:30 - P. Tchaikovsky ‚Äì S. Rachmaninov ‚Äî Lullaby\n" +
                "2:01:55 - F. Chopin ‚Äî Berceuse Op. 57, D-flat Major\n" +
                "2:05:22 - F. Chopin ‚Äî Etude Op. 10 ‚Ññ5, G-flat Major",
            title_ru: "–§–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ü–µ—Ä—Ç –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–æ–≥–æ 2024 –≥–æ–¥–∞",
            short_description_ru: "–ë–∞—Ö, –ú–æ—Ü–∞—Ä—Ç, –ë–µ—Ç—Ö–æ–≤–µ–Ω, –®–æ–ø–µ–Ω, –°–∫—Ä—è–±–∏–Ω, –í–∞–≥–Ω–µ—Ä‚Äì–õ–∏—Å—Ç, –ß–∞–π–∫–æ–≤—Å–∫–∏–π‚Äì–†–∞—Ö–º–∞–Ω–∏–Ω–æ–≤",
            description_ru: null,
            record_type_id: 1,
        },
        {
            link: "https://www.youtube.com/embed/25FJM6fH58Q?si=ezuCKJsiXc50KbEL",
            date: [new Date('2024-05-12 17:00')],
            title: "Piano Concert in the Roerich Museum (Bishkek)",
            short_description: "Bach, Beethoven, Chopin, Scriabin, and Mendelssohn-Rachmaninoff",
            description: "J.S. Bach - Italian Concerto BWV 971 F major\n" +
                "I. Allegro\n" +
                "II. Andante\n" +
                "III. Presto\n" +
                "\n" +
                "L. van Beethoven - Sonata No. 12 op. 26 A-flat major\n" +
                "I. Andante con variazioni\n" +
                "II. Scherzo: Allegro molto\n" +
                "III. Funeral March on the Death of a Hero: Maestoso andante\n" +
                "IV. Rondo: Allegro\n" +
                "\n" +
                "F. Chopin - Sonata No. 2 op. 35 B-flat minor\n" +
                "I. Grave ‚Äì Doppio movimento\n" +
                "II. Scherzo\n" +
                "III. Funeral March: Lento\n" +
                "IV. Finale: Presto\n" +
                "\n" +
                "A. Scriabin - Sonata No. 1 op. 6 F-sharp minor\n" +
                "I. Allegro con fuoco\n" +
                "II. Adagio\n" +
                "III. Presto\n" +
                "IV. Funeral March\n" +
                "\n" +
                "F. Chopin - Berceuse op. 57 D-flat major\n" +
                "\n" +
                "F. Mendelssohn-S. Rachmaninoff - Scherzo (from the music for William Shakespeare's comedy \"A Midsummer Night's Dream\")",
            title_ru: "–ö–æ–Ω—Ü–µ—Ä—Ç –≤ –º—É–∑–µ–µ –∏–º. –ù.–ö. –†–µ—Ä–∏—Ö–∞ (–≥. –ë–∏—à–∫–µ–∫)",
            short_description_ru: "–ë–∞—Ö, –ë–µ—Ç—Ö–æ–≤–µ–Ω, –®–æ–ø–µ–Ω, –°–∫—Ä—è–±–∏–Ω –∏ –ú–µ–Ω–¥–µ–ª—å—Å–æ–Ω-–†–∞—Ö–º–∞–Ω–∏–Ω–æ–≤",
            description_ru: null,
            record_type_id: 1,
        },
        {
            link: "https://www.youtube.com/embed/Kbv0I14Wjsw?si=4qkxsx_Vxz54AufH",
            date: [new Date('2024-04-16 17:00')],
            title: "Piano Concert in the Roerich museum (Bishkek)",
            title_ru: "–ö–æ–Ω—Ü–µ—Ä—Ç –≤ –º—É–∑–µ–µ –∏–º. –ù.–ö. –†–µ—Ä–∏—Ö–∞ (–≥. –ë–∏—à–∫–µ–∫)",
            short_description: "Mozart, Chopin, Beethoven",
            short_description_ru: "–ú–æ—Ü–∞—Ä—Ç, –®–æ–ø–µ–Ω, –ë–µ—Ç—Ö–æ–≤–µ–Ω",
            description: "ALEXANDER KUDRYAVTSEV -\n" +
                "Lecturer at the Kyrgyz National Conservatory\n" +
                "named after K. Moldobasanov, laureate of international competitions.\n" +
                "\n" +
                "üéºConcert Program:\n" +
                "Mozart - Sonata #11 K. 331 A-major\n" +
                "I. Andante grazioso\n" +
                "II. Menuetto\n" +
                "III. Rondo alla turca\n" +
                "\n" +
                "F. Chopin - Sonata #2 op. 35 b-flat minor\n" +
                "I. Grave ‚Äì Doppio movimento\n" +
                "II. Scherzo\n" +
                "III. Marche fun√®bre: Lento\n" +
                "IV. Finale: Presto\n" +
                "\n" +
                "L. van Beethoven - A. Rubinstein - \"Turkish March\" from the music for the drama \"Ruins of Athens (1811)",
            description_ru: null,
            record_type_id: 1,
        },
        {
            link: "https://www.youtube.com/embed/gGeMXSF5ehY?si=hQ7Sv1XWQPXlSGP2",
            date: [new Date('2024-03-28 15:00')],
            title: "Musical Farewell: Karakol's Grand Finale Concert part - 1",
            title_ru: "–ö–æ–Ω—Ü–µ—Ä—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –†–ê–ú –∏–º. –ì–Ω–µ—Å–∏–Ω—ã—Ö –≤ –≥. –ö–∞—Ä–∞–∫–æ–ª. –ß–∞—Å—Ç—å 1",
            short_description: "Sergey Utkin, Harit Chunananthasap, Eva Shetko",
            short_description_ru: "–ò–≥—Ä–∞—é—Ç –°. –£—Ç–∫–∏–Ω, –•. –ß—É–Ω–∞–Ω–∞–Ω—Ç–∞—Å–∞–ø, –ï. –®–µ—Ç—å–∫–æ",
            description: "Program\n" +
                "Performed by students of the Gnessin Music Academy:\n" +
                "Sergey Utkin (class of Prof. V. Nosina)\n" +
                "Harit Chunananthasap (class of Prof. V. Tropp)\n" +
                "Eva Shetko (class of Prof. O. Danilova)\n" +
                "\n" +
                "Part I:\n" +
                "\n" +
                "Fran√ßois Couperin ‚Äì \"La Couperin\" from \"Piece de clavecin\", Book IV, order 21\n" +
                "\n" +
                "Fr√©d√©ric Chopin ‚Äì Scherzo No.1, Op. 20, in B minor\n" +
                "Performed by Harit Chunananthasap\n" +
                "\n" +
                "Johannes Brahms ‚Äì Intermezzo, Op. 118 No.2, in A major\n" +
                "Performed by Sergey Utkin\n" +
                "\n" +
                "Sergei Prokofiev ‚Äì Sonata No.5 (1923), Op. 38, in C major. I movement ‚Äì Allegro tranquillo.\n" +
                "Alexander Scriabin ‚Äì Etude Op. 8 No.3, in B minor\n" +
                "Performed by Eva Shetko\n" +
                "\n" +
                "Pyotr Tchaikovsky ‚Äî Mikhail Pletnev ‚Äì Concert Suite from the ballet \"The Sleeping Beauty\"\n" +
                "I. Prologue\n" +
                "II. Dance of the Pages\n" +
                "III. Vision\n" +
                "V. Chirping Canary\n" +
                "IX. Little Red Riding Hood and the Wolf\n" +
                "X. Adagio\n" +
                "Performed by Harit Chunananthasap",
            description_ru: null,
            record_type_id: 1,
        },
        {
            link: "",
            date: [new Date('2024-03-28 16:00')],
            title: "Musical Farewell: Karakol's Grand Finale Concert part - 2",
            title_ru: "–ö–æ–Ω—Ü–µ—Ä—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –†–ê–ú –∏–º. –ì–Ω–µ—Å–∏–Ω—ã—Ö –≤ –≥. –ö–∞—Ä–∞–∫–æ–ª. –ß–∞—Å—Ç—å 2",
            short_description: "Sergey Utkin, Harit Chunananthasap, Eva Shetko",
            short_description_ru: "–ò–≥—Ä–∞—é—Ç –°. –£—Ç–∫–∏–Ω, –•. –ß—É–Ω–∞–Ω–∞–Ω—Ç–∞—Å–∞–ø, –ï. –®–µ—Ç—å–∫–æ",
            description: "Location: Tumanov Music School, Karakol\n" +
                "\n" +
                "Date: March 28, 2024\n" +
                "\n" +
                "Program\n" +
                "\n" +
                "Performed by students of the Gnessin RAM:\n" +
                "Sergey Utkin (class of Prof. V.  Nosina)\n" +
                "Harit Chunananthasap (class of Prof. V. Tropp)\n" +
                "Eva Shetko (class of Prof. O. Danilova)\n" +
                "\n" +
                "Part II:\n" +
                "\n" +
                "Johannes Brahms ‚Äì Concerto No.1, Op. 15, in D minor\n" +
                "I. Maestoso\n" +
                "II. Adagio\n" +
                "III. Rondo. Allegro non troppo\n" +
                "Performed by Sergey Utkin, orchestra part by Alexander Kudryavtsev\n" +
                "Concert Host: Sergey Utkin",
            description_ru: null,
            record_type_id: 1,
        },
        {
            link: "",
            date: [new Date('2022-02-01 19:00')],
            title: "Piano concert by students of the Gnessin Academy of Music in the Roerich Museum",
            title_ru: "–ö–æ–Ω—Ü–µ—Ä—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –†–ê–ú –∏–º. –ì–Ω–µ—Å–∏–Ω—ã—Ö –≤ –º—É–∑–µ–µ –∏–º. –ù.–ö. –†–µ—Ä–∏—Ö–∞ (–≥. –ë–∏—à–∫–µ–∫)",
            short_description: "",
            short_description_ru: "",
            description: "",
            description_ru: null,
            record_type_id: 1,
        },
        {
            link: "",
            date: [new Date('2022-02-01 19:00')],
            title: "",
            title_ru: "",
            short_description: "",
            short_description_ru: "",
            description: "",
            description_ru: null,
            record_type_id: 1,
        },
        {
            link: "",
            date: [new Date('2022-02-01 19:00')],
            title: "",
            title_ru: "",
            short_description: "",
            short_description_ru: "",
            description: "",
            description_ru: null,
            record_type_id: 1,
        },
        {
            link: "",
            date: [new Date('2022-02-01 19:00')],
            title: "",
            title_ru: "",
            short_description: "",
            short_description_ru: "",
            description: "",
            description_ru: null,
            record_type_id: 1,
        },
        {
            link: "",
            date: [new Date('2022-02-01 19:00')],
            title: "",
            title_ru: "",
            short_description: "",
            short_description_ru: "",
            description: "",
            description_ru: null,
            record_type_id: 1,
        },
        {
            link: "",
            date: [new Date('2022-02-01 19:00')],
            title: "",
            title_ru: "",
            short_description: "",
            short_description_ru: "",
            description: "",
            description_ru: null,
            record_type_id: 1,
        },
    ];

    await tx.insert(recordsTable).values(records);

    console.log('New records created!');
}

async function seedArtist(tx: PgTransaction<NodePgQueryResultHKT, Record<string, never>, ExtractTablesWithRelations<Record<string, never>>>) {
    const artistRowNum = await tx.select({count: count()}).from(artistTable);

    if (artistRowNum[0].count === 0) {
        const artist: typeof artistTable.$inferInsert = {
            admin_path: "admin",
            name: 'Alexander Kudryavtsev',
            name_ru: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö—É–¥—Ä—è–≤—Ü–µ–≤',
            profession: 'piano',
            profession_ru: '—Ñ–æ—Ä—Ç–µ–ø–∏–∞–Ω–æ',
            biography: 'Alexander was born on July 31, 1987 in Moscow, Russia.\n\n' +
                'He studied in Prof. T. Zelikman\'s piano class at the Gnessin School and afterwards at the Gnessin Academy. Later he taught at the Gnessin Academy (2016 ‚Äî 2022). Now he works as a teacher at the Kyrgyz National Conservatory named K. Maldybasanov.\n\n' +
                'Alexander toured Italy, Germany, the Netherlands, the Czech Republic, France, and Russia as a pianist. Repeatedly performed solo and played with the orchestra in various halls of Moscow, including the Great Hall of the Moscow Conservatory. Have records on the radio and CDs.\n\n' +
                'Alexander is the winner of many competitions. Among them is the 1st prize in the radio competition \"Concertino Prague\" (2003), the 1st prize and the medal of the President of Italy of the 4th international competition of the association \"Dino Ciani\" (Verbania, Italy, 2005), the winner of the 1st prize of the 1st Stanislav Neuhaus International Piano Competition (2007).',
            biography_ru: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä —Ä–æ–¥–∏–ª—Å—è 31 –∏—é–ª—è 1987 –≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ, –†–æ—Å—Å–∏—è.\n\n' +
                '–û–Ω —É—á–∏–ª—Å—è –≤ –∫–ª–∞—Å—Å–µ —Ñ–æ—Ä—Ç–µ–ø–∏–∞–Ω–æ –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞ –¢. –ê. –ó–µ–ª–∏–∫–º–∞–Ω –≤ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –°—Ä–µ–¥–Ω–µ–π –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –®–∫–æ–ª–µ –∏–º. –ì–Ω–µ—Å–∏–Ω—ã—Ö, –∞ –∑–∞—Ç–µ–º - –≤ –ê–∫–∞–¥–µ–º–∏–∏ –∏–º. –ì–Ω–µ—Å–∏–Ω—ã—Ö. –ü–æ—Å–ª–µ —É—á—ë–±—ã –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ø—Ä–µ–ø–æ–¥–∞–≤–∞–ª –≤ –ê–∫–∞–¥–µ–º–∏–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Ñ–æ—Ä—Ç–µ–ø–∏–∞–Ω–æ —Å 2016 –ø–æ 2022 –≥–≥. –í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –≤–µ–¥—ë—Ç –∫–ª–∞—Å—Å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä—Ç–µ–ø–∏–∞–Ω–æ –≤ –ö—ã—Ä–≥–∏–∑—Å–∫–æ–π –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–æ—Ä–∏–∏ –∏–º–µ–Ω–∏ –ö. –ú–∞–ª–¥—ã–±–∞—Å–∞–Ω–æ–≤–∞.\n\n' +
                '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –≥–∞—Å—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞–ª –≤ –ò—Ç–∞–ª–∏–∏, –ì–µ—Ä–º–∞–Ω–∏–∏, –ù–∏–¥–µ—Ä–ª–∞–Ω–¥–∞—Ö, –ß–µ—Ö–∏–∏, –§—Ä–∞–Ω—Ü–∏–∏ –∏ –†–æ—Å—Å–∏–∏. –ù–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –≤—ã—Å—Ç—É–ø–∞–ª —Å–æ–ª—å–Ω–æ –∏ —Å –æ—Ä–∫–µ—Å—Ç—Ä–æ–º –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–ª–∞—Ö –ú–æ—Å–∫–≤—ã, –≤ —Ç–æ–º —á–∏—Å–ª–µ –≤ –ë–æ–ª—å—à–æ–º –∑–∞–ª–µ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–æ—Ä–∏–∏. –ò–º–µ–µ—Ç –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ä–∞–¥–∏–æ –∏ –∫–æ–º–ø–∞–∫—Ç-–¥–∏—Å–∫–∞—Ö.\n\n' +
                '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä —è–≤–ª—è–µ—Ç—Å—è –ª–∞—É—Ä–µ–∞—Ç–æ–º –º–Ω–æ–≥–∏—Ö –∫–æ–Ω–∫—É—Ä—Å–æ–≤. –°—Ä–µ–¥–∏ –Ω–∏—Ö ‚Äî 1-—è –ø—Ä–µ–º–∏—è —Ä–∞–¥–∏–æ–∫–æ–Ω–∫—É—Ä—Å–∞ ¬´–ö–æ–Ω—Ü–µ—Ä—Ç–∏–Ω–æ –ü—Ä–∞–≥–∞¬ª (2003), 1-—è –ø—Ä–µ–º–∏—è –∏ –º–µ–¥–∞–ª—å –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –ò—Ç–∞–ª–∏–∏ 4-–≥–æ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ ¬´–î–∏–Ω–æ –ß–∏–∞–Ω–∏¬ª (–í–µ—Ä–±–∞–Ω–∏—è, –ò—Ç–∞–ª–∏—è, 2005), 1-—è –ø—Ä–µ–º–∏—è 1-–≥–æ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞ –ø–∏–∞–Ω–∏—Å—Ç–æ–≤ –∏–º–µ–Ω–∏ –°—Ç–∞–Ω–∏—Å–ª–∞–≤–∞ –ù–µ–π–≥–∞—É–∑–∞ (2007).',
        };

        await tx.insert(artistTable).values(artist);

        console.log('New artist created!');
    } else {
        console.log('Artist already exists!');
    }
}

export async function GET() {
    await db.transaction(async (tx) => {
        try {
            await seedArtist(tx);
            await seedSocial(tx);
            await seedRecordTypes(tx);
            await seedRecords(tx);
            await seedConcerts(tx);
        } catch (err) {
            console.error(err);
            tx.rollback();
            return Response.json({err}, {status: 500});
        }
    });

    return Response.json({message: 'Database seeded successfully'});
}
